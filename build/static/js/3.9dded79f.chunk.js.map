{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","classes","src","alt","message","likes","maxLength10","maxLengthCreator","AddNewPostReduxForm","reduxForm","form","PostInput","onSubmit","handleSubmit","Field","validate","required","component","TextArea","name","placeholder","type","value","MyPosts","formData","addPost","newPostText","postsBlock","postsData","map","elem","content","likesCount","MyPostsContainer","connect","state","profilePage","dispatch","updateNewPostText","text","updateNewPostTextActionCreator","addPostActionCreator","ProfileStatusHooks","useState","editMode","setEditMode","status","inputValue","setInputValue","useEffect","deactivateEditMode","e","preventDefault","updateStatus","onDoubleClick","pageID","myID","onBlur","onChange","target","autoFocus","ProfileInfo","profile","descBlock","photos","large","userPNG","Preloader","Profile","match","params","userid","ProfileContainer","userID","this","getUserProfile","getUserStatus","React","Component","compose","withRouter","withAuthRedirect","auth","id"],"mappings":"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","file":"static/js/3.9dded79f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostInput\":\"MyPosts_PostInput__1Ljwk\",\"postsBlock\":\"MyPosts_postsBlock__2ifKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile-image\":\"ProfileInfo_Profile-image__1JMED\",\"descBlock\":\"ProfileInfo_descBlock__2zXqS\",\"userPhoto\":\"ProfileInfo_userPhoto__1UIR7\"};","import React from 'react';\nimport classes from './Post.module.css';\n\nconst Post = (props) => {\n  return (\n    <div className={classes['item']}>\n      <img src='https://hornews.com/images/news_large/c1d4b2b8ec608ea72764c5678816d5c9.jpg' alt='' />\n      {props.message}\n      <div>\n        <span>Like</span> {props.likes}\n      </div>\n    </div>\n\n  );\n}\n\nexport default Post;\n","import React from 'react';\nimport classes from './MyPosts.module.css';\n\nimport { reduxForm, Field } from 'redux-form';\n\nimport { required, maxLengthCreator } from '../../../utils/validators/validators.js';\nimport { TextArea } from '../../common/FormControls/FormControls.jsx';\n\nimport Post from './Post/Post.jsx';\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst AddNewPostForm = (props) => {\n  return (\n    <form className={classes.PostInput} onSubmit={props.handleSubmit}>\n      <h3>My Posts</h3>\n\n      <Field validate={[required, maxLength10]} component={TextArea} name='newPostText' placeholder='Post message'/>\n      <div>\n        <input type='submit' value='Add Post' />\n\n      </div>\n      <input type=\"reset\"/>\n    </form>\n  )\n}\n\nconst AddNewPostReduxForm = reduxForm({form: 'newPostText'})(AddNewPostForm);\n\nconst MyPosts = (props) => {\n\n  let myPosts = () => props.postsData.map((elem) => <Post message={elem.content} likesCount={elem.likesCount} />);\n\n  let onSubmit = (formData) => {\n    props.addPost(formData.newPostText);\n  }\n\n  return (\n    <div>\n      <AddNewPostReduxForm onSubmit={onSubmit}/>\n      <div className={classes.postsBlock}>\n        {myPosts()}\n      </div>\n    </div>\n  );\n}\n\nexport default MyPosts;\n","// import React from 'react';\n\nimport MyPosts from './MyPosts.jsx';\n\nimport { updateNewPostTextActionCreator, addPostActionCreator } from '../../../redux/profile-reducer.js';\n\n// import StoreContext from '../../../StoreContext';\n\nimport { connect } from 'react-redux';\n\n// const MyPostsContainer = () => {\n//\n//   let addPost = (store) => {\n//     store.dispatch(addPostActionCreator());\n//   }\n//   let newPostChange = (store, text) => {\n//     let action = updateNewPostTextActionCreator(text);\n//     store.dispatch(action);\n//   }\n//\n//   return (\n//     <StoreContext.Consumer>\n//       {(store) => (\n//         <MyPosts\n//           updateNewPostText={(text) => newPostChange(store, text)}\n//           addPost={() => addPost(store)}\n//           postsData={store.getState().profilePage.postsData}\n//           newPostText={store.getState().profilePage.newPostText}\n//         />\n//       )}\n//     </StoreContext.Consumer>\n//   );\n// }\n\nconst mapStateToProps = (state) => ({\n  postsData: state.profilePage.postsData,\n  newPostText: state.profilePage.newPostText,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateNewPostText: (text) => {\n    dispatch(updateNewPostTextActionCreator(text))\n  },\n  addPost: (text) => {\n    dispatch(addPostActionCreator(text))}\n})\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n","import React, { useState, useEffect } from 'react';\n\nconst ProfileStatusHooks = (props) => {\n\n  let [editMode, setEditMode] = useState(false);\n  let [inputValue, setInputValue] = useState(props.status);\n\n  const activateEditMode = () => {\n    if (props.pageID === props.myID || !props.pageID){\n      setEditMode(true);\n    }\n  }\n\n  useEffect(() => {\n      setInputValue(props.status);\n  }, [props.status]);\n\n  const statusInputChangeHandler = (e) => {\n    setInputValue(e.target.value);\n  }\n\n  const deactivateEditMode = (e) => {\n    e.preventDefault();\n    setEditMode(false);\n    props.updateStatus(inputValue);\n  }\n\n  return (\n    <>\n      {!editMode &&\n        <div>\n          <span onDoubleClick={activateEditMode}>{props.status ? inputValue : 'no-status'}</span>\n        </div>\n      }\n      {editMode &&\n        <form onSubmit={deactivateEditMode}>\n          <input onBlur={deactivateEditMode} onChange={statusInputChangeHandler} value={inputValue} autoFocus={true}></input>\n        </form>}\n    </>\n  );\n}\n\nexport default ProfileStatusHooks;\n","import React from 'react';\nimport classes from './ProfileInfo.module.css';\nimport userPNG from '../../../assets/images/user.png';\nimport ProfileStatusHooks from './ProfileStatusHooks';\n\n\nimport Preloader from '../../common/Preloader/Preloader.jsx'\n\n\nconst ProfileInfo = (props) => {\n\n  if (!props.profile) {\n    return <Preloader />\n  }\n\n  return (\n    <div>\n      {\n        // <img className={classes['Profile-image']} src='https://www.belightsoft.com/products/imagetricks/img/intro-video-poster@2x.jpg' alt=''/>\n      }\n      <div className={classes.descBlock}>\n        <img className={classes['userPhoto']} src={props.profile.photos.large ? props.profile.photos.large : userPNG} alt='avatar'/>\n        <ProfileStatusHooks status={props.status} updateStatus={props.updateStatus} pageID={props.pageID} myID={props.myID}/>\n      </div>\n    </div>\n\n  );\n}\n\nexport default ProfileInfo;\n","import React from 'react';\nimport classes from './Profile.module.css';\n\nimport MyPostsContainer from './MyPosts/MyPostsContainer.jsx';\nimport ProfileInfo from './ProfileInfo/ProfileInfo.jsx';\nimport Preloader from '../common/Preloader/Preloader.jsx';\n\nconst Profile = (props) => {\n  if(!props.profile){\n    return <Preloader />\n  }\n\n  return (\n    <div className={classes['Profile']}>\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} pageID={props.match.params.userid} myID={props.myID}/>\n      <MyPostsContainer />\n    </div>\n  );\n}\n\nexport default Profile;\n","import React from 'react';\nimport Profile from './Profile.jsx';\n\nimport { getUserProfile, getUserStatus, updateStatus } from '../../redux/profile-reducer.js';\n\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\n\nclass ProfileContainer extends React.Component {\n\n  componentDidMount() {\n    let userID = this.props.match.params.userid\n    if (!userID) {\n      userID = this.props.myID;\n    }\n    this.props.getUserProfile(userID);\n    this.props.getUserStatus(userID);\n  }\n\n  render() {\n    return (\n      <div>\n        <Profile {...this.props}/>\n      </div>\n    )\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    myID: state.auth.id,\n  }\n}\n\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\n\n// let withURLDataContainerComponent = withRouter(AuthRedirectComponent);\n\n// export default connect(mapStateToProps, { getUserProfile })(withURLDataContainerComponent);\n\nexport default compose(\n  withRouter,\n  withAuthRedirect,\n  connect(mapStateToProps, { getUserProfile, getUserStatus, updateStatus }),\n)(ProfileContainer);\n"],"sourceRoot":""}