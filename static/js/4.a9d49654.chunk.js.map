{"version":3,"sources":["components/Dialog/Dialog.module.css","components/Dialog/ContactName/ContactName.jsx","components/Dialog/Message/Message.jsx","components/Dialog/AddMessageForm/AddMessageForm.jsx","components/Dialog/Dialog.jsx","components/Dialog/DialogContainer.jsx"],"names":["module","exports","ContactName","props","className","classes","name","to","data","id","activeClassName","activeName","Message","message","content","maxLength10","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","component","TextArea","type","value","Dialog","Dialogs","contacts","messagesPage","dialogsData","map","elem","messageWrapper","messages","AddMessageForm","formData","sendButtonClick","newMessage","newMessageBody","compose","withAuthRedirect","connect","state","dispatch","addNewMessageActionCreator"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,QAAU,wBAAwB,SAAW,yBAAyB,KAAO,qBAAqB,WAAa,2BAA2B,eAAiB,iC,sFCa9JC,EARK,SAACC,GACnB,OACE,yBAAKC,UAAWC,IAAQC,MACtB,kBAAC,IAAD,CAASC,GAAE,oBAAeJ,EAAMK,KAAKC,IAAMC,gBAAiBL,IAAQM,YAAaR,EAAMK,KAAKF,QCEnFM,EARC,SAACT,GACf,OACE,yBAAKC,UAAWC,IAAQQ,SACrBV,EAAMK,KAAKM,U,iCCCZC,EAAcC,YAAiB,IAWtBC,cAAU,CAACC,KAAM,wBAAjBD,EATS,SAACd,GACvB,OACE,0BAAMgB,SAAUhB,EAAMiB,cACpB,kBAACC,EAAA,EAAD,CAAOC,SAAU,CAAEC,IAAUR,GAAeS,UAAWC,IAAUnB,KAAK,eACtE,2BAAOoB,KAAK,SAASC,MAAM,aCoBlBC,EAvBA,SAACzB,GAQd,OACE,yBAAKC,UAAWC,IAAQwB,SAEtB,yBAAKzB,UAAWC,IAAQyB,UACrB3B,EAAM4B,aAAaC,YAAYC,KAAI,SAACC,GAAD,OAAU,kBAAC,EAAD,CAAa1B,KAAM0B,QAGnE,yBAAK9B,UAAWC,IAAQ8B,gBACrBhC,EAAM4B,aAAaK,SAASH,KAAI,SAACC,GAAD,OAAU,kBAAC,EAAD,CAAS1B,KAAM0B,OAC1D,kBAACG,EAAD,CAAgBlB,SAbP,SAACmB,GACdnC,EAAMoC,gBAAgBD,EAASE,aAYSC,eAAgBtC,EAAM4B,aAAaU,oB,+BC2BhEC,sBACbC,IACAC,aApBoB,SAACC,GAErB,MAAO,CACLd,aAAcc,EAAMd,iBAIC,SAACe,GACxB,MAAO,CACLP,gBAAiB,SAACE,GAChBK,EAASC,YAA2BN,SAQ3BC,CAGbd","file":"static/js/4.a9d49654.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialogs\":\"Dialog_Dialogs__ZnStm\",\"contacts\":\"Dialog_contacts__G8U0B\",\"name\":\"Dialog_name__3Ckyt\",\"activeName\":\"Dialog_activeName__3ECKn\",\"messageWrapper\":\"Dialog_messageWrapper__-zxmo\"};","import React from 'react';\nimport classes from '../Dialog.module.css';\n\nimport {NavLink} from 'react-router-dom';\n\n\nconst ContactName = (props) => {\n  return(\n    <div className={classes.name}>\n      <NavLink to={`/messages/${props.data.id}`} activeClassName={classes.activeName}>{props.data.name}</NavLink>\n    </div>\n  )\n}\n\nexport default ContactName;\n","import React from 'react';\nimport classes from '../Dialog.module.css';\n\nconst Message = (props) => {\n  return (\n    <div className={classes.message}>\n      {props.data.content}\n    </div>\n  )\n}\n\nexport default Message;\n","import React from 'react';\n\nimport { reduxForm, Field } from 'redux-form';\n\nimport { required, maxLengthCreator } from '../../../utils/validators/validators.js';\nimport { TextArea } from '../../common/FormControls/FormControls.jsx';\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst SendMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <Field validate={[ required, maxLength10 ]} component={TextArea} name='newMessage' />\n      <input type='submit' value='Send'/>\n    </form>\n  )\n}\n\nexport default reduxForm({form: 'dialogAddmessageForm'})(SendMessageForm)\n","import React from 'react';\nimport classes from './Dialog.module.css';\n\n\n\nimport ContactName from './ContactName/ContactName.jsx'\nimport Message from './Message/Message.jsx'\nimport AddMessageForm from './AddMessageForm/AddMessageForm.jsx'\n\n\nconst Dialog = (props) => {\n\n  // let messageInputRef = React.createRef();\n\n  let onSubmit = (formData) => {\n    props.sendButtonClick(formData.newMessage);\n  }\n\n  return (\n    <div className={classes.Dialogs}>\n\n      <div className={classes.contacts}>\n        {props.messagesPage.dialogsData.map((elem) => <ContactName data={elem} />)}\n      </div>\n\n      <div className={classes.messageWrapper}>\n        {props.messagesPage.messages.map((elem) => <Message data={elem} />)}\n        <AddMessageForm onSubmit={onSubmit} newMessageBody={props.messagesPage.newMessageBody}/>\n      </div>\n    </div>\n  );\n}\n\nexport default Dialog;\n","import Dialog from './Dialog.jsx'\n\nimport { addNewMessageActionCreator } from '../../redux/dialogs-reducer.js';\n\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\n\n// import StoreContext from '../../StoreContext';\n\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\n// const DialogContainer = () => {\n//\n//   let sendButtonClick = (store) => {\n//     var action = addNewMessageActionCreator();\n//     store.dispatch(action);\n//   }\n//\n//   const newMessageChangeHandler = (store, content) => {\n//     var action = updateNewMessageBodyActionCreator(content);\n//     store.dispatch(action);\n//   }\n//\n//   return (\n//     <StoreContext.Consumer>\n//       {(store) => (\n//         <Dialog\n//           sendButtonClick={() => sendButtonClick(store)}\n//           newMessageChangeHandler={(content) => newMessageChangeHandler(store, content)}\n//           messagesPage={store.getState().dialogsPage}\n//         />\n//       )}\n//     </StoreContext.Consumer>\n//   );\n// }\n\nlet mapStateToProps = (state) => {\n\n  return {\n    messagesPage: state.messagesPage,\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    sendButtonClick: (newMessageBody) => {\n      dispatch(addNewMessageActionCreator(newMessageBody))\n    },\n    // newMessageChangeHandler: (body) => {\n    //   dispatch(updateNewMessageBodyActionCreator(body))\n    // }\n  }\n}\n\nexport default compose(\n  withAuthRedirect,\n  connect(mapStateToProps, mapDispatchToProps)\n)(Dialog)\n\n// let AuthRedirectComponent = withAuthRedirect(Dialog);\n\n// const DialogContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\n\n\n// export default DialogContainer;\n"],"sourceRoot":""}